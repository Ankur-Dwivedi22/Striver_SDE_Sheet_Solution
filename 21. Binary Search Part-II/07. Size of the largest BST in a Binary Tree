/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class NodeValue{
    public:
        int maxSum;
        int minNode;
        int maxNode;

        NodeValue(int minNode, int maxNode, int maxSum){
            this->minNode = minNode;
            this->maxNode = maxNode;
            this->maxSum = maxSum;
        }
};

class Solution {
private:
    int ans = 0;
    NodeValue maxSumBSTHelper(TreeNode* root){
        if(!root){
            return NodeValue(INT_MAX, INT_MIN, 0);
        }

        auto left = maxSumBSTHelper(root->left);
        auto right = maxSumBSTHelper(root->right);

        if(left.maxNode < root->val && root->val < right.minNode){
            int curr = left.maxSum + right.maxSum + root->val;
            ans = max(ans , curr);
            return NodeValue(min(left.minNode, root->val) , max(right.maxNode , root->val) , curr);
        }

        return NodeValue(INT_MIN, INT_MAX, 0);        
    }
public:
    int maxSumBST(TreeNode* root) {
        maxSumBSTHelper(root);
        return ans;
    }
};