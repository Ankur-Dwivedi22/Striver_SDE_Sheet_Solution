class Solution {
public:
    bool dfs(int node, vector<int> &vis, vector<int> &pathVis, vector<vector<int>> &adj){
        vis[node] = 1;
        pathVis[node] = 1;

        for(int adjNode : adj[node]){
            if(!vis[adjNode]){
                if(dfs(adjNode, vis, pathVis, adj))
                    return true;
            }
            else if(pathVis[adjNode] == 1){
                return true;
            }
        }
        pathVis[node] = 0;
        return false;
    }
    bool canFinish(int n, vector<vector<int>>& pre) {
        vector<vector<int>> adj(n);
        for(auto it : pre){
            int u = it[0] , v = it[1];
            adj[v].push_back(u);
        }
        vector<int> vis(n, 0) , pathVis(n, 0);
        for(int i=0; i<n; i++){
            if(!vis[i]){
                if(dfs(i,vis,pathVis,adj))
                    return false;
            }
        }

        return true;
    }
};