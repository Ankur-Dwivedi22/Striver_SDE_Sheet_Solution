class Solution {
  public:
    void dfs(int node, vector<vector<int>> &adj, vector<int> &vis, stack<int> &st){
        vis[node] = 1;
        
        for(auto adjNode : adj[node]){
            if(!vis[adjNode]){
                dfs(adjNode, adj, vis, st);
            }
        }
        
        st.push(node);
    }
    vector<int> topoSort(int V, vector<vector<int>>& edges) {
        // code here
        vector<vector<int>> adj(V);
        vector<int> vis(V, 0);
        for(auto edge : edges){
            int u = edge[0] , v = edge[1];
            adj[u].push_back(v);
        }
        
        vector<int> topo;
        stack<int> st;
        for(int i=0; i<V; i++){
            if(!vis[i]){
                dfs(i,adj,vis,st);
            }
        }
        
        while(!st.empty()){
            topo.push_back(st.top());
            st.pop();
        }
        
        return topo;
    }
};