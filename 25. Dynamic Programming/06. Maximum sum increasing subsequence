class Solution {
  public:
    int f(int ind, int prev, vector<int> &arr, vector<vector<int>> &dp){
        if(ind == arr.size()){
            return 0;
        }
        
        if(dp[ind][prev+1] != -1) return dp[ind][prev+1];
        
        int notTake = 0 + f(ind+1, prev, arr, dp);
        int take = 0;
        if(prev == -1 || arr[ind] > arr[prev]){
            take = arr[ind] + f(ind+1, ind, arr, dp);
        }
        
        return dp[ind][prev+1] = max(take, notTake);
    }
    int maxSumIS(vector<int>& arr) {
        // Your code goes here
        int n = arr.size();
        vector<vector<int>> dp(n, vector<int> (n+1, -1));
        return f(0, -1, arr, dp);
    }
};