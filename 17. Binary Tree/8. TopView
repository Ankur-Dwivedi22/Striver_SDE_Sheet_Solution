/*
struct Node
{
    int data;
    Node* left;
    Node* right;
};
*/
class Solution {
  public:
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    vector<int> topView(Node *root) {
        // code here
        vector<int> ans;
        queue<pair<Node* , int>> q;
        map<int,int> mp;
        
        q.push({root, 0});
        while(!q.empty()){
            auto it = q.front();
            q.pop();
            
            Node* node = it.first;
            int v = it.second;
            
            if(mp.find(v) == mp.end()){
                mp[v] = node->data;
            }
            
            if(node->left){
                q.push({node->left, v-1});
            }
            
            if(node->right){
                q.push({node->right, v+1});
            }
        }
        
        for(auto it: mp){
            ans.push_back(it.second);
        }
        
        return ans;
    }
};